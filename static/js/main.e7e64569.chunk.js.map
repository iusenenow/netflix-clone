{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","Footer.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","data","results","fetchData","className","map","movie","key","id","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","randomMovie","Math","floor","random","length","str","n","style","backgroundSize","backgroundPostion","backgroundImage","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7e64569.chunk.js","sourcesContent":["import axios from \"axios\"\n\n// base url to make requests to the movie database\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\"\n})\n\nexport default instance","import React, { useState, useEffect } from 'react';\nimport axios from './axios'\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer'\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\n\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\n\n  const [movies, setMovies] = useState([])\n  const [trailerUrl, setTrailerUrl] = useState(\"\")\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await axios.get(fetchUrl)\n      setMovies(data.results)\n    }\n    fetchData()\n  }, [fetchUrl])\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl('')\n    } else {\n      movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\")\n        .then(url => {\n          const urlParams = new URLSearchParams(new URL(url).search)\n          setTrailerUrl(urlParams.get('v'))\n        }).catch(error => console.log(error))\n    }\n  }\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n\n      <div className=\"row-posters\">\n        {movies.map(movie => (\n          <img\n            key={movie.id}\n            className={`row-poster ${isLargeRow && \"row-posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path :\n                movie.backdrop_path}`}\n            alt={movie.name}\n            onClick={() => handleClick(movie)}\n          />\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  )\n}\n\nexport default Row\n","const API_KEY = \"9b0c3a900acbc7df0724e380a6cab89b\"\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\n\nexport default requests;","import React, { useEffect, useState } from 'react'\nimport axios from './axios'\nimport requests from './requests';\n\nconst Banner = () => {\n\n  const [movie, setMovie] = useState([])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await axios.get(requests.fetchNetflixOriginals)\n\n      const randomMovie = data.results[Math.floor(Math.random() * data.results.length - 1)]\n\n      setMovie(randomMovie)\n    }\n    fetchData()\n  }, [])\n\n  const truncate = (str, n) => {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str\n  }\n\n  return (\n    <header className=\"banner\" style={{\n      backgroundSize: \"cover\",\n      backgroundPostion: \"center center\",\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`\n    }}>\n\n      <div className=\"banner-contents\">\n        <h1 className=\"banner-title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n\n        <div className=\"banner-buttons\">\n          <button className=\"banner-button\">Play</button>\n          <button className=\"banner-button\">My List</button>\n        </div>\n\n        <h1 className=\"banner-description\">\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n\n      <div className=\"banner-fadeBottom\"></div>\n    </header>\n  )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\n\nconst Nav = () => {\n\n  const [show, handleShow] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 100) {\n        handleShow(true)\n      } else handleShow(false)\n    })\n    return () => window.removeEventListener('scroll')\n  }, [])\n\n  return (\n    <div className={`nav ${show && \"nav-black\"}`}>\n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1280px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\" className=\"nav-logo\" />\n      <img src=\"https://i.pinimg.com/564x/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.jpg\" alt=\"Netflix Avatar\" className=\"nav-avatar\" />\n    </div>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <p className=\"footer\">Â© 2020 Netflix, Inc.</p>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from './Banner'\nimport Nav from './Nav'\nimport Footer from './Footer';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}